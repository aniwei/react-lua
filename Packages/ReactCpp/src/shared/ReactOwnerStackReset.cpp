#include "ReactOwnerStackReset.h"

// Auto-generated by scripts/translate-react.js
// Source: react-main/packages/shared/ReactOwnerStackReset.js

#include "ReactBuildConfig.h"
#include "ReactSharedInternals.h"

#include <stdexcept>

namespace react {

namespace jsi = facebook::jsi;

namespace {

constexpr double kResetThresholdMs = 1000.0;

double getCurrentTime(jsi::Runtime& runtime) {
  const auto& global = runtime.global();

  if (global.hasProperty(runtime, "performance")) {
    auto performanceValue = global.getProperty(runtime, "performance");
    if (performanceValue.isObject()) {
      auto performance = performanceValue.getObject(runtime);
      if (performance.hasProperty(runtime, "now")) {
        auto nowFn = performance.getPropertyAsFunction(runtime, "now");
        auto result = nowFn.call(runtime);
        if (result.isNumber()) {
          return result.getNumber();
        }
      }
    }
  }

  if (global.hasProperty(runtime, "Date")) {
    auto dateValue = global.getProperty(runtime, "Date");
    if (dateValue.isObject()) {
      auto date = dateValue.getObject(runtime);
      if (date.hasProperty(runtime, "now")) {
        auto nowFn = date.getPropertyAsFunction(runtime, "now");
        auto result = nowFn.call(runtime);
        if (result.isNumber()) {
          return result.getNumber();
        }
      }
    }
  }

  return 0.0;
}

double& lastResetTime() {
  static double value = 0.0;
  return value;
}

void resetRecentlyCreatedOwnerStacks(jsi::Runtime& runtime) {
  auto internals = getReactSharedInternals(runtime);
  setReactSharedInternalsProperty(
    runtime,
    internals,
    ReactSharedInternalsKeys::kRecentlyCreatedOwnerStacks,
    jsi::Value(0));
}

} // namespace

void resetOwnerStackLimit(jsi::Runtime& runtime) {
  if constexpr (kDevBuild) {
    auto now = getCurrentTime(runtime);
    auto elapsed = now - lastResetTime();
    if (elapsed > kResetThresholdMs) {
      resetRecentlyCreatedOwnerStacks(runtime);
      lastResetTime() = now;
    }
  } else {
    throw std::runtime_error(
      "resetOwnerStackLimit should never be called in production mode. This is a bug in React.");
  }
}

} // namespace react
