#pragma once

// Auto-generated by scripts/translate-react.js
// Source: react-main/packages/react-reconciler/src/ReactFiberFlags.js

#include <cstdint>

#include "../shared/ReactFeatureFlags.h"

namespace react {

using FiberFlags = std::uint32_t;

inline constexpr FiberFlags NoFlags = 0u;
inline constexpr FiberFlags PerformedWork = 1u << 0;
inline constexpr FiberFlags Placement = 1u << 1;
inline constexpr FiberFlags Update = 1u << 2;
inline constexpr FiberFlags Cloned = 1u << 3;
inline constexpr FiberFlags ChildDeletion = 1u << 4;
inline constexpr FiberFlags ContentReset = 1u << 5;
inline constexpr FiberFlags Callback = 1u << 6;
inline constexpr FiberFlags DidCapture = 1u << 7;
inline constexpr FiberFlags ForceClientRender = 1u << 8;
inline constexpr FiberFlags Ref = 1u << 9;
inline constexpr FiberFlags Snapshot = 1u << 10;
inline constexpr FiberFlags Passive = 1u << 11;
inline constexpr FiberFlags Hydrating = 1u << 12;
inline constexpr FiberFlags Visibility = 1u << 13;
inline constexpr FiberFlags StoreConsistency = 1u << 14;

inline constexpr FiberFlags Hydrate = Callback;
inline constexpr FiberFlags ScheduleRetry = StoreConsistency;
inline constexpr FiberFlags ShouldSuspendCommit = Visibility;
inline constexpr FiberFlags ViewTransitionNamedMount = ShouldSuspendCommit;
inline constexpr FiberFlags DidDefer = ContentReset;
inline constexpr FiberFlags FormReset = Snapshot;
inline constexpr FiberFlags AffectedParentLayout = ContentReset;

inline constexpr FiberFlags LifecycleEffectMask =
		Passive | Update | Callback | Ref | Snapshot | StoreConsistency;

inline constexpr FiberFlags HostEffectMask = 0b0000000000000000111111111111111u;

inline constexpr FiberFlags Incomplete = 1u << 15;
inline constexpr FiberFlags ShouldCapture = 1u << 16;
inline constexpr FiberFlags ForceUpdateForLegacySuspense = 1u << 17;
inline constexpr FiberFlags DidPropagateContext = 1u << 18;
inline constexpr FiberFlags NeedsPropagation = 1u << 19;
inline constexpr FiberFlags Forked = 1u << 20;

inline constexpr FiberFlags SnapshotStatic = 1u << 21;
inline constexpr FiberFlags LayoutStatic = 1u << 22;
inline constexpr FiberFlags RefStatic = LayoutStatic;
inline constexpr FiberFlags PassiveStatic = 1u << 23;
inline constexpr FiberFlags MaySuspendCommit = 1u << 24;
inline constexpr FiberFlags ViewTransitionNamedStatic =
		SnapshotStatic | MaySuspendCommit;
inline constexpr FiberFlags ViewTransitionStatic = 1u << 25;

inline constexpr FiberFlags PlacementDEV = 1u << 26;
inline constexpr FiberFlags MountLayoutDev = 1u << 27;
inline constexpr FiberFlags MountPassiveDev = 1u << 28;

struct FeatureFlags {
	bool enableCreateEventHandleAPI = ::react::enableCreateEventHandleAPI;
	bool enableUseEffectEventHook = ::react::enableUseEffectEventHook;
};

[[nodiscard]] constexpr FiberFlags computeBeforeMutationMask(
		const FeatureFlags& flags) {
	return Snapshot |
			(flags.enableCreateEventHandleAPI
					 ? (Update | ChildDeletion | Visibility)
					 : (flags.enableUseEffectEventHook ? Update : 0u));
}

inline constexpr FiberFlags BeforeMutationMask =
		computeBeforeMutationMask(FeatureFlags{});

inline constexpr FiberFlags BeforeAndAfterMutationTransitionMask =
		Snapshot | Update | Placement | ChildDeletion | Visibility | ContentReset;

inline constexpr FiberFlags MutationMask = Placement | Update | ChildDeletion |
		ContentReset | Ref | Hydrating | Visibility | FormReset;

inline constexpr FiberFlags LayoutMask = Update | Callback | Ref | Visibility;

inline constexpr FiberFlags PassiveMask = Passive | Visibility | ChildDeletion;

inline constexpr FiberFlags PassiveTransitionMask =
		PassiveMask | Update | Placement;

inline constexpr FiberFlags StaticMask = LayoutStatic | PassiveStatic |
		RefStatic | MaySuspendCommit | ViewTransitionStatic |
		ViewTransitionNamedStatic;

[[nodiscard]] constexpr bool hasFlag(FiberFlags flags, FiberFlags test) {
	return (flags & test) != 0u;
}

[[nodiscard]] constexpr FiberFlags mergeFlags(FiberFlags a, FiberFlags b) {
	return a | b;
}

[[nodiscard]] constexpr FiberFlags clearFlags(FiberFlags flags, FiberFlags mask) {
	return flags & ~mask;
}

} // namespace react
